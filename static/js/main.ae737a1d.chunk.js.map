{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","className","role","aria-label","Images","JOB_PLD","imgPath","JOB_WAR","JOB_DRK","JOB_GNB","JOB_WHM","JOB_SCH","JOB_AST","JOB_MNK","JOB_DRG","JOB_NIN","JOB_SAM","JOB_BRD","JOB_MCH","JOB_DNC","JOB_BLM","JOB_SMN","JOB_RDM","DB_COMPRESSED_WATER","DB_COMPRESSED_LIGHTNING","DB_WATER_VULN","DB_LIGHTNING_VULN","DB_PENALTY","DB_NISI_ALPHA","DB_NISI_BETA","DB_NISI_GAMMA","DB_NISI_DELTA","DB_JUDGMENT_ALPHA","DB_JUDGMENT_BETA","DB_JUDGMENT_GAMMA","DB_JUDGMENT_DELTA","ROLE_TANK","ROLE_HEALER","ROLE_DPS","GameState","Role","PartyOrder","THD","TDH","HTD","HDT","DTH","DHT","Players","PLD","name","job","icon","sortOrder","debuffs","WAR","DRK","GNB","WHM","SCH","AST","MNK","DRG","NIN","SAM","BRD","MCH","DNC","BLM","SMN","RDM","Jobs","TANK","HEALER","MELEE","RANGED","CASTER","DbType","Debuffs","LIGHTNING_VULN","type","WATER_VULN","PENALTY","COMPRESSED_LIGHTNING","COMPRESSED_WATER","NISI_ALPHA","NISI_BETA","NISI_GAMMA","NISI_DELTA","JUDGMENT_ALPHA","JUDGMENT_BETA","JUDGMENT_GAMMA","JUDGMENT_DELTA","Simulator","props","state","pcJob","partyOrder","party","correctIndex","turn","score","gameState","this","setState","order","generateParty","forEach","m","healers","filter","shuffleArray","pop","push","pool","concat","tanks","th","dps","nisi","Math","random","sort","a","b","assignDebuffs","gstate","selectedJob","handler","j","setPcJob","selectedOrder","o","setPartyOrder","EndSetupButton","onClick","completeSetup","PlayerJobFrame","PartyOrderFrame","ReadyPrompt","startGame","RunningPrompt","React","Component","SelectJobFrame","SelectJobButton","key","tankButtons","map","p","genButton","healerButtons","meleeButtons","rangedButtons","casterButtons","src","alt","SelectPartyOrderFrame","h","generateOrderLabel","PartyFrame","pData","i","index","data","Player","idx","d","Debuff","debuff","array","length","floor","console","log","numTanks","numHealers","numMelee","numRanged","numCasters","slice","melee","ranged","casters","spans","c","charAt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"oQAmBeA,MAhBf,WACC,OACG,6BACE,yBAAKC,UAAU,SACb,4BACE,0BAAMC,KAAK,MAAMC,aAAW,mBAA5B,gBADF,gCAGE,0BAAMD,KAAK,MAAMC,aAAW,mBAA5B,iBAEF,+FAEF,kBAAC,EAAD,QAYAC,EAAS,CACbC,QAASC,yBACTC,QAASD,yBACTE,QAASF,6BACTG,QAASH,4BACTI,QAASJ,4BACTK,QAASL,yBACTM,QAASN,6BACTO,QAASP,sBACTQ,QAASR,yBACTS,QAAST,uBACTU,QAASV,yBACTW,QAASX,sBACTY,QAASZ,2BACTa,QAASb,wBACTc,QAASd,4BACTe,QAASf,0BACTgB,QAAShB,0BACTiB,oBAAqBjB,2BACrBkB,wBAAyBlB,+BACzBmB,cAAenB,yBACfoB,kBAAmBpB,6BACnBqB,WAAYrB,kBACZsB,cAAetB,iBACfuB,aAAcvB,iBACdwB,cAAexB,iBACfyB,cAAezB,iBACf0B,kBAAmB1B,qBACnB2B,iBAAkB3B,qBAClB4B,kBAAmB5B,qBACnB6B,kBAAmB7B,qBACnB8B,UAAW9B,oBACX+B,YAAa/B,sBACbgC,SAAUhC,uBAGNiC,EACE,QADFA,EAEE,QAFFA,EAGI,UAKJC,EACE,OADFA,EAEI,SAFJA,EAGG,QAHHA,EAII,SAJJA,EAKI,SAGJC,EAAa,CACjBC,KAAG,mBACAF,EAAc,KADd,cAEAA,EAAc,KAFd,cAGAA,EAAc,KAHd,cAIAA,EAAc,KAJd,cAKAA,EAAc,KALd,GAOHG,KAAG,mBACAH,EAAc,KADd,cAEAA,EAAc,KAFd,cAGAA,EAAc,KAHd,cAIAA,EAAc,KAJd,cAKAA,EAAc,KALd,GAOHI,KAAG,mBACAJ,EAAc,KADd,cAEAA,EAAc,KAFd,cAGAA,EAAc,KAHd,cAIAA,EAAc,KAJd,cAKAA,EAAc,KALd,GAOHK,KAAG,mBACAL,EAAc,KADd,cAEAA,EAAc,KAFd,cAGAA,EAAc,KAHd,cAIAA,EAAc,KAJd,cAKAA,EAAc,KALd,GAOHM,KAAG,mBACAN,EAAc,KADd,cAEAA,EAAc,KAFd,cAGAA,EAAc,KAHd,cAIAA,EAAc,KAJd,cAKAA,EAAc,KALd,GAOHO,KAAG,mBACAP,EAAc,KADd,cAEAA,EAAc,KAFd,cAGAA,EAAc,KAHd,cAIAA,EAAc,KAJd,cAKAA,EAAc,KALd,IASCQ,EAAU,CACdC,IAAK,CACHC,KAAM,YACNC,IAAK,MACLjD,KAAMsC,EACNY,KAAMhD,EAAOC,QACbgD,UAAW,EACdC,QAAS,IAERC,IAAK,CACHL,KAAM,kBACNC,IAAK,MACLjD,KAAMsC,EACNY,KAAMhD,EAAOG,QACb8C,UAAW,EACdC,QAAS,IAERE,IAAK,CACHN,KAAM,aACNC,IAAK,MACLjD,KAAMsC,EACNY,KAAMhD,EAAOI,QACb6C,UAAW,EACdC,QAAS,IAERG,IAAK,CACHP,KAAM,sBACNC,IAAK,MACLjD,KAAMsC,EACNY,KAAMhD,EAAOK,QACb4C,UAAW,EACdC,QAAS,IAERI,IAAK,CACHR,KAAM,cACNC,IAAK,MACLjD,KAAMsC,EACNY,KAAMhD,EAAOM,QACb2C,UAAW,EACdC,QAAS,IAERK,IAAK,CACHT,KAAM,YACNC,IAAK,MACLjD,KAAMsC,EACNY,KAAMhD,EAAOO,QACb0C,UAAW,EACdC,QAAS,IAERM,IAAK,CACHV,KAAM,aACNC,IAAK,MACLjD,KAAMsC,EACNY,KAAMhD,EAAOQ,QACbyC,UAAW,EACdC,QAAS,IAERO,IAAK,CACHX,KAAM,iBACNC,IAAK,MACLjD,KAAMsC,EACNY,KAAMhD,EAAOS,QACbwC,UAAW,EACdC,QAAS,IAERQ,IAAK,CACHZ,KAAM,UACNC,IAAK,MACLjD,KAAMsC,EACNY,KAAMhD,EAAOU,QACbuC,UAAW,EACdC,QAAS,IAERS,IAAK,CACHb,KAAM,oBACNC,IAAK,MACLjD,KAAMsC,EACNY,KAAMhD,EAAOW,QACbsC,UAAW,EACdC,QAAS,IAERU,IAAK,CACHd,KAAM,gBACNC,IAAK,MACLjD,KAAMsC,EACNY,KAAMhD,EAAOY,QACbqC,UAAW,GACdC,QAAS,IAERW,IAAK,CACHf,KAAM,eACNC,IAAK,MACLjD,KAAMsC,EACNY,KAAMhD,EAAOa,QACboC,UAAW,GACdC,QAAS,IAERY,IAAK,CACHhB,KAAM,cACNC,IAAK,MACLjD,KAAMsC,EACNY,KAAMhD,EAAOS,QACbwC,UAAW,GACdC,QAAS,IAERa,IAAK,CACHjB,KAAM,kBACNC,IAAK,MACLjD,KAAMsC,EACNY,KAAMhD,EAAOe,QACbkC,UAAW,GACdC,QAAS,IAERc,IAAK,CACHlB,KAAM,WACNC,IAAK,MACLjD,KAAMsC,EACNY,KAAMhD,EAAOgB,QACbiC,UAAW,GACdC,QAAS,IAERe,IAAK,CACHnB,KAAM,iBACNC,IAAK,MACLjD,KAAMsC,EACNY,KAAMhD,EAAOiB,QACbgC,UAAW,GACdC,QAAS,IAERgB,IAAK,CACHpB,KAAM,kBACNC,IAAK,MACLjD,KAAMsC,EACNY,KAAMhD,EAAOkB,QACb+B,UAAW,GACdC,QAAS,KAIJiB,EAAO,CACXC,KAAM,CAACxB,EAAQC,IAAKD,EAAQO,IAAKP,EAAQQ,IAAKR,EAAQS,KACtDgB,OAAQ,CAACzB,EAAQU,IAAKV,EAAQW,IAAKX,EAAQY,KAC3Cc,MAAO,CAAC1B,EAAQa,IAAKb,EAAQc,IAAKd,EAAQe,IAAKf,EAAQgB,KACvDW,OAAQ,CAAC3B,EAAQiB,IAAKjB,EAAQkB,IAAKlB,EAAQmB,KAC3CS,OAAQ,CAAC5B,EAAQoB,IAAKpB,EAAQqB,IAAKrB,EAAQsB,MAGvCO,EACC,OADDA,EAEK,WAGLC,EAAU,CACfC,eAAgB,CACf7B,KAAM,+BACNE,KAAMhD,EAAOsB,kBACbsD,KAAM,KACN3B,UAAW,GAEZ4B,WAAY,CACX/B,KAAM,2BACNE,KAAMhD,EAAOqB,cACbuD,KAAM,KACN3B,UAAW,GAEZ6B,QAAS,CACRhC,KAAM,8BACNE,KAAMhD,EAAOuB,WACbqD,KAAM,KACN3B,UAAW,GAEZ8B,qBAAsB,CACrBjC,KAAM,uBACNE,KAAMhD,EAAOoB,wBACbwD,KAAM,KACN3B,UAAW,GAEZ+B,iBAAkB,CACjBlC,KAAM,mBACNE,KAAMhD,EAAOmB,oBACbyD,KAAM,KACN3B,UAAW,GAEZgC,WAAY,CACXnC,KAAM,2BACNE,KAAMhD,EAAOwB,cACboD,KAAMH,EACNxB,UAAW,GAEZiC,UAAW,CACVpC,KAAM,2BACNE,KAAMhD,EAAOyB,aACbmD,KAAMH,EACNxB,UAAW,GAEZkC,WAAY,CACXrC,KAAM,2BACNE,KAAMhD,EAAO0B,cACbkD,KAAMH,EACNxB,UAAW,GAEZmC,WAAY,CACXtC,KAAM,2BACNE,KAAMhD,EAAO2B,cACbiD,KAAMH,EACNxB,UAAW,GAEZoC,eAAgB,CACfvC,KAAM,qCACNE,KAAMhD,EAAO4B,kBACbgD,KAAMH,EACNxB,UAAW,GAEZqC,cAAe,CACdxC,KAAM,qCACNE,KAAMhD,EAAO6B,iBACb+C,KAAMH,EACNxB,UAAW,GAEZsC,eAAgB,CACfzC,KAAM,qCACNE,KAAMhD,EAAO8B,kBACb8C,KAAMH,EACNxB,UAAW,GAEZuC,eAAgB,CACf1C,KAAM,qCACNE,KAAMhD,EAAO+B,kBACb6C,KAAMH,EACNxB,UAAW,IAaPwC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,KACPC,WAAY,KACZC,MAAO,KACPC,aAAc,KACdC,KAAM,EACNC,MAAO,EACPC,UAAW/D,GATI,E,qDAaVY,GACPoD,KAAKC,SAAS,CAACR,MAAO7C,M,oCAGVsD,GACZF,KAAKC,SAAS,CAACP,WAAYQ,M,sCAI3BF,KAAKC,SAAS,CACZN,MAAOQ,EAAc1D,EAAQuD,KAAKR,MAAMC,OAAQvD,EAAW8D,KAAKR,MAAME,aACtEK,UAAW/D,M,kCAKTgE,KAAKR,MAAMK,KAAO,KACpBG,KAAKC,SAAS,CACZJ,KAAMG,KAAKR,MAAMK,KAAO,EACxBE,UAAW/D,IAmXnB,SAAuB2D,GAEtBA,EAAMS,SAAQ,SAAAC,GAAC,OAAIA,EAAEtD,QAAU,CAACwB,EAAQI,YAExC,IAAI2B,EAAUX,EAAMY,QAAO,SAAAF,GAAC,OAAIA,EAAE1G,OAASsC,KAC3CuE,EAAaF,GACbA,EAAQG,MAAM1D,QAAQ2D,KAAKnC,EAAQK,sBAEnC,IAAI+B,EAAOhB,EAAMY,QAAO,SAAAF,GAAC,OAAIA,EAAE1G,OAASsC,GAAeoE,EAAE1G,OAASsC,KAAa2E,OAAON,GACtFE,EAAaG,GAEbA,EAAKF,MAAM1D,QAAQ2D,KAAKnC,EAAQM,kBAEhC8B,EAAKF,MAAM1D,QAAQ2D,KAAKnC,EAAQG,YAEhC,IAAImC,EAAQlB,EAAMY,QAAO,SAAAF,GAAC,OAAIA,EAAE1G,OAASsC,KACzCuE,EAAaK,GACbA,EAAMJ,MAAM1D,QAAQ2D,KAAKnC,EAAQC,gBAEjC,IAAIsC,EAAKnB,EAAMY,QAAO,SAAAF,GAAC,OAAIA,EAAE1G,OAASsC,GAAaoE,EAAE1G,OAASsC,KAC9DuE,EAAaM,GACbA,EAAG,GAAG/D,QAAQ2D,KAAKnC,EAAQW,gBAC3B4B,EAAG,GAAG/D,QAAQ2D,KAAKnC,EAAQY,eAC3B2B,EAAG,GAAG/D,QAAQ2D,KAAKnC,EAAQa,gBAC3B0B,EAAG,GAAG/D,QAAQ2D,KAAKnC,EAAQc,gBAE3B,IAAI0B,EAAMpB,EAAMY,QAAO,SAAAF,GAAC,OAAIA,EAAE1G,OAASsC,GAAcoE,EAAE1G,OAASsC,GAAeoE,EAAE1G,OAASsC,KAC1FuE,EAAaO,GACbA,EAAI,GAAGhE,QAAQ2D,KAAKnC,EAAQW,gBAC5B6B,EAAI,GAAGhE,QAAQ2D,KAAKnC,EAAQY,eAC5B4B,EAAI,GAAGhE,QAAQ2D,KAAKnC,EAAQa,gBAC5B2B,EAAI,GAAGhE,QAAQ2D,KAAKnC,EAAQc,gBAE5B,IAAI2B,EAAqC,KAAX,EAAhBC,KAAKC,SAAe,GAAYJ,EAAKC,EACnDP,EAAaQ,GACbA,EAAK,GAAGjE,QAAQ2D,KAAKnC,EAAQO,YAC7BkC,EAAK,GAAGjE,QAAQ2D,KAAKnC,EAAQQ,WAC7BiC,EAAK,GAAGjE,QAAQ2D,KAAKnC,EAAQS,YAC7BgC,EAAK,GAAGjE,QAAQ2D,KAAKnC,EAAQU,YAE7BU,EAAMS,SAAQ,SAAAC,GAAC,OAAIA,EAAEtD,QAAQoE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEtE,UAAYuE,EAAEvE,gBAxZvDwE,CAActB,KAAKR,MAAMG,U,+BAKnB,IAAD,OACH4B,EAASvB,KAAKR,MAAMO,UACxB,OAAIwB,IAAWvF,EAEX,6BACE,yBAAKtC,UAAU,uBACb,kBAAC,EAAD,CACE8H,YAAaxB,KAAKR,MAAMC,MACxBgC,QAAS,SAAAC,GAAC,OAAI,EAAKC,SAASD,MAE9B,kBAAC,EAAD,CACEE,cAAiB5B,KAAKR,MAAME,WAC5B+B,QAAS,SAAAI,GAAC,OAAI,EAAKC,cAAcD,OAGrC,kBAACE,EAAD,CACEtC,MAAOO,KAAKR,MAAMC,MAClBC,WAAYM,KAAKR,MAAME,WACvBsC,QAAS,kBAAM,EAAKC,oBAKnBV,IAAWvF,EAEhB,6BACE,yBAAKtC,UAAU,uBACb,kBAACwI,EAAD,CAAgBtF,IAAKoD,KAAKR,MAAMC,QAChC,kBAAC0C,EAAD,CAAiBjC,MAAOF,KAAKR,MAAME,cAErC,kBAAC0C,EAAD,CAAaJ,QAAS,kBAAM,EAAKK,eACjC,kBAAC,EAAD,CAAY1C,MAAOK,KAAKR,MAAMG,SAI3B4B,IAAWvF,EAEhB,6BACE,yBAAKtC,UAAU,uBACb,kBAACwI,EAAD,CAAgBtF,IAAKoD,KAAKR,MAAMC,QAChC,kBAAC0C,EAAD,CAAiBjC,MAAOF,KAAKR,MAAME,cAErC,kBAAC4C,EAAD,MACA,kBAAC,EAAD,CAAY3C,MAAOK,KAAKR,MAAMG,cAR/B,M,GA5Ee4C,IAAMC,WAqGxBC,E,wKACM7F,GAAM,IAAD,OACb,OACE,kBAAC8F,EAAD,CACEC,IAAK/F,EACLA,IAAKA,EACLoF,QAAS,kBAAM,EAAKzC,MAAMkC,QAAQ7E,Q,+BAK9B,IAAD,OACP,GAA+B,OAA3BoD,KAAKT,MAAMiC,YAAsB,CACnC,IAAIoB,EAAc5E,EAAKC,KAAK4E,KAAI,SAAAC,GAAC,OAAI,EAAKC,UAAUD,EAAElG,QAClDoG,EAAgBhF,EAAKE,OAAO2E,KAAI,SAAAC,GAAC,OAAI,EAAKC,UAAUD,EAAElG,QACtDqG,EAAejF,EAAKG,MAAM0E,KAAI,SAAAC,GAAC,OAAI,EAAKC,UAAUD,EAAElG,QACpDsG,EAAgBlF,EAAKI,OAAOyE,KAAI,SAAAC,GAAC,OAAI,EAAKC,UAAUD,EAAElG,QACtDuG,EAAgBnF,EAAKK,OAAOwE,KAAI,SAAAC,GAAC,OAAI,EAAKC,UAAUD,EAAElG,QAE1D,OACE,yBAAKlD,UAAU,oBACb,+CACCkJ,EAAY,6BACZI,EAAc,6BACdC,EAAa,6BACbC,EAAc,6BACdC,GAKL,OACE,yBAAKzJ,UAAU,oBACb,yCACA,4BACE,yBAAKA,UAAU,WACb0J,IAAK3G,EAAQuD,KAAKT,MAAMiC,aAAa3E,KACrCwG,IAAKrD,KAAKT,MAAMiC,cAEjBxB,KAAKT,MAAMiC,aAEd,4BAAQQ,QAAS,kBAAM,EAAKzC,MAAMkC,QAAQ,QAA1C,uB,GAzCmBc,IAAMC,WAkDnC,SAASE,EAAgBnD,GACvB,OACE,4BAAQ7F,UAAU,aAAasI,QAASzC,EAAMyC,SAC5C,yBAAKtI,UAAU,WACb0J,IAAK3G,EAAQ8C,EAAM3C,KAAKC,KACxBwG,IAAK9D,EAAM3C,O,IAMb0G,E,uKAEF,IAAIC,EAAIvD,KAAKT,MAAMkC,QAEnB,OAAiC,OAA7BzB,KAAKT,MAAMqC,cAEX,yBAAKlI,UAAU,sBACb,kDACA,4BAAQA,UAAU,cAAcsI,QAAS,kBAAMuB,EAAE,SAC9CC,EAAmB,QAEtB,4BAAQ9J,UAAU,cAAcsI,QAAS,kBAAMuB,EAAE,SAC9CC,EAAmB,QAEtB,4BAAQ9J,UAAU,cAAcsI,QAAS,kBAAMuB,EAAE,SAC9CC,EAAmB,QAEtB,4BAAQ9J,UAAU,cAAcsI,QAAS,kBAAMuB,EAAE,SAC9CC,EAAmB,QAEtB,4BAAQ9J,UAAU,cAAcsI,QAAS,kBAAMuB,EAAE,SAC9CC,EAAmB,QAEtB,4BAAQ9J,UAAU,cAAcsI,QAAS,kBAAMuB,EAAE,SAC9CC,EAAmB,QAEtB,2BAAG,qEAML,yBAAK9J,UAAU,sBACb,iDACA,6BACG8J,EAAmBxD,KAAKT,MAAMqC,gBAEjC,2BAAG,oEACH,4BAAQI,QAAS,kBAAMuB,EAAE,QAAzB,+B,GAtC0BhB,IAAMC,WA+C1C,SAAST,EAAexC,GACtB,OAAoB,OAAhBA,EAAME,OAAuC,OAArBF,EAAMG,WAE9B,yBAAKhG,UAAU,uBACb,4BAAQA,UAAU,YAAYsI,QAASzC,EAAMyC,SAA7C,aAMC,KAOT,SAASE,EAAe3C,GACtB,OACE,6BAAK,gDAEH,yBAAK7F,UAAU,cAAc0J,IAAK3G,EAAQ8C,EAAM3C,KAAKC,KAAMwG,IAAK9D,EAAM3C,MAFnE,OAGF2C,EAAM3C,MAKb,SAASuF,EAAgB5C,GACvB,OACE,6BACE,oDACCiE,EAAmBjE,EAAMW,QAKhC,SAASkC,EAAY7C,GACnB,OACE,6BACE,yBAAK7F,UAAU,uBACb,yBAAKA,UAAU,gBACb,iGACA,iLAEA,4CAAiB,6CAAjB,0HAGA,iMAKJ,yBAAKA,UAAU,cACb,4BAAQA,UAAU,YAAYsI,QAASzC,EAAMyC,SAA7C,yB,IAQFyB,E,uKAEF,IAAIC,EAAQ1D,KAAKT,MAAMI,MAAMkD,KAAI,SAACxC,EAAGsD,GACjC,OAAO,kBAAC,EAAD,CAAQhB,IAAKtC,EAAEzD,IAAKgH,MAAOD,EAAGE,KAAMxD,OAG/C,OACE,2BAAO3G,UAAU,eACf,+BACGgK,Q,GATcnB,IAAMC,WAgBzBsB,E,uKAEF,IAAID,EAAO7D,KAAKT,MAAMsE,KAClBE,EAAM/D,KAAKT,MAAMqE,MAAQ,EACzB7G,EAA0B,MAAhB8G,EAAK9G,QAAkB,KAAO8G,EAAK9G,QAAQ8F,KAAI,SAACmB,EAAGL,GAC/D,OAAO,kBAACM,EAAD,CAAQtB,IAAKgB,EAAGO,OAAQF,OAGjC,OACE,wBAAItK,UAAU,cACZ,4BACE,yBAAKA,UAAU,WAAW0J,IAAKS,EAAKhH,KAAMwG,IAAKQ,EAAKjH,OAEtD,4BACE,yBAAKlD,UAAU,gBACf,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,gBAAgBqK,GAC/B,yBAAKrK,UAAU,gBAAf,QACA,yBAAKA,UAAU,eAAemK,EAAKlH,OAErC,yBAAKjD,UAAU,uBACb,yBAAKA,UAAU,MACb,yBAAKA,UAAU,eACf,yBAAKA,UAAU,WAAf,WAEF,yBAAKA,UAAU,MACb,yBAAKA,UAAU,QACf,yBAAKA,UAAU,WAAf,MACK,0BAAMA,UAAU,YAAhB,UAKX,wBAAIA,UAAU,gBAAgBqD,Q,GAjCjBwF,IAAMC,WAuC3B,SAASyB,EAAO1E,GACd,OAAO,yBAAK7F,UAAU,SAAS0J,IAAK7D,EAAM2E,OAAOrH,KAAMwG,IAAK9D,EAAM2E,OAAOvH,OAO3E,SAAS2F,EAAc/C,GACrB,OACE,6BACE,yBAAK7F,UAAU,uBACb,yBAAKA,UAAU,gCACb,2FACA,sEACA,2FAGJ,yBAAKA,UAAU,8BACb,uDAWR,SAAS8G,EAAa2D,GAClB,IAAK,IAAIR,EAAIQ,EAAMC,OAAS,EAAGT,EAAI,EAAGA,IAAK,CACvC,IAAMjC,EAAIT,KAAKoD,MAAMpD,KAAKC,UAAYyC,EAAI,IADH,EAEhB,CAACQ,EAAMzC,GAAIyC,EAAMR,IAAvCQ,EAAMR,GAFgC,KAE5BQ,EAAMzC,GAFsB,MAM/C,SAASvB,EAAcV,EAAOC,GAC7B4E,QAAQC,IAAI9E,GACX,IAAIE,EAAQ,GACR6E,EAAW,GAAK/E,EAAM9F,OAASsC,EAAY,EAAI,GAC/CwI,EAAa,GAAKhF,EAAM9F,OAASsC,EAAc,EAAI,GACnDyI,EAAqC,GAAT,EAAhBzD,KAAKC,SAAe,GAChCyD,EAAY,GAAKlF,EAAM9F,OAASsC,EAAc,EAAI,GAClD2I,EAAa,EAAIF,GAAYjF,EAAM9F,OAASsC,EAAc,EAAI,GAClEyI,GAAajF,EAAM9F,OAASsC,EAAa,EAAI,EAE9C,IAAI4E,EAAQ7C,EAAKC,KAAK4G,QACtBrE,EAAaK,GACb,IAAK,IAAI8C,EAAI,EAAGA,EAAIa,EAAUb,IAC3BhE,EAAMe,KAAN,eAAeG,EAAM8C,KAExB,IAAIrD,EAAUtC,EAAKE,OAAO2G,QAC1BrE,EAAaF,GACb,IAAK,IAAIqD,EAAI,EAAGA,EAAIc,EAAYd,IAC7BhE,EAAMe,KAAN,eAAeJ,EAAQqD,KAE1B,IAAImB,EAAQ9G,EAAKG,MAAM0G,QACvBrE,EAAasE,GACb,IAAK,IAAInB,EAAI,EAAGA,EAAIe,EAAUf,IAC3BhE,EAAMe,KAAN,eAAeoE,EAAMnB,KAExB,IAAIoB,EAAS/G,EAAKI,OAAOyG,QACzBrE,EAAauE,GACZ,IAAK,IAAIpB,EAAI,EAAGA,EAAIgB,EAAWhB,IAChChE,EAAMe,KAAN,eAAeqE,EAAOpB,KAEtB,IAAIqB,EAAUhH,EAAKK,OAAOwG,QAC1BrE,EAAawE,GACb,IAAK,IAAIrB,EAAI,EAAGA,EAAIiB,EAAYjB,IAC7BhE,EAAMe,KAAN,eAAesE,EAAQrB,KAM1B,OAJChE,EAAMwB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEtE,UAAY4C,EAAW0B,EAAEzH,OAAU0H,EAAEvE,UAAY4C,EAAW2B,EAAE1H,UAEtE,CAAC,eAAI8F,IAAQmB,OAAOjB,GAgDtC,SAAS6D,EAAmBtD,GAE1B,IADA,IAAI+E,EAAQ,GACHtB,EAAI,EAAGA,EAAIzD,EAAMkE,OAAQT,IAAK,CACrC,IAAIuB,EAAIhF,EAAMiF,OAAOxB,GACX,MAANuB,EACFD,EAAMvE,KACJ,0BAAMhH,UAAU,WAAWiJ,IAAI,KAC7B,yBAAKjJ,UAAU,YAAY0J,IAAKvJ,EAAOgC,UAAWwH,IAAI,SADxD,UAKW,MAAN6B,EACPD,EAAMvE,KACJ,0BAAMhH,UAAU,WAAWiJ,IAAI,KAC7B,yBAAKjJ,UAAU,YAAY0J,IAAKvJ,EAAOiC,YAAauH,IAAI,WAD1D,YAKW,MAAN6B,GACPD,EAAMvE,KACJ,0BAAMhH,UAAU,WAAWiJ,IAAI,KAC7B,yBAAKjJ,UAAU,YAAY0J,IAAKvJ,EAAOkC,SAAUsH,IAAI,QADvD,SAMN,OAAO4B,EC1zBWG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL/B,QAAQ+B,MAAMA,EAAMC,a","file":"static/js/main.ae737a1d.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction App() {\n\treturn (\n    <div>\n      <div className=\"title\">\n        <h1>\n          <span role=\"img\" aria-label=\"green tea emoji\">🍵</span>\n          &nbsp;Matcha Nisi Simulator&nbsp;\n          <span role=\"img\" aria-label=\"green tea emoji\">🍵</span>\n        </h1>\n        <h3>by Katryna Evalindra @ Adamantoise, for Untilted Matcha Static</h3>\n      </div>\n      <Simulator/>\n    </div>\n\t);\n}\n\nexport default App;\n\n// =============\n// = CONSTANTS =\n// =============\n\nconst imgPath = \"img/\";\nconst Images = {\n  JOB_PLD: imgPath + \"Paladin_Icon_3.png\",\n  JOB_WAR: imgPath + \"Warrior_Icon_3.png\",\n  JOB_DRK: imgPath + \"Dark_Knight_Icon_3.png\",\n  JOB_GNB: imgPath + \"Gunbreaker_Icon_3.png\",\n  JOB_WHM: imgPath + \"White_Mage_Icon_3.png\",\n  JOB_SCH: imgPath + \"Scholar_Icon_3.png\",\n  JOB_AST: imgPath + \"Astrologian_Icon_3.png\",\n  JOB_MNK: imgPath + \"Monk_Icon_3.png\",\n  JOB_DRG: imgPath + \"Dragoon_Icon_3.png\",\n  JOB_NIN: imgPath + \"Ninja_Icon_3.png\",\n  JOB_SAM: imgPath + \"Samurai_Icon_3.png\",\n  JOB_BRD: imgPath + \"Bard_Icon_3.png\",\n  JOB_MCH: imgPath + \"Machinist_Icon_3.png\",\n  JOB_DNC: imgPath + \"Dancer_Icon_3.png\",\n  JOB_BLM: imgPath + \"Black_Mage_Icon_3.png\",\n  JOB_SMN: imgPath + \"Summoner_Icon_3.png\",\n  JOB_RDM: imgPath + \"Red_Mage_Icon_3.png\",\n  DB_COMPRESSED_WATER: imgPath + \"compressed-water.png\",\n  DB_COMPRESSED_LIGHTNING: imgPath + \"compressed-lightning.png\",\n  DB_WATER_VULN: imgPath + \"water-res-down.png\",\n  DB_LIGHTNING_VULN: imgPath + \"lightning-res-down.png\",\n  DB_PENALTY: imgPath + \"penalty.png\",\n  DB_NISI_ALPHA: imgPath + \"nisi-a.png\",\n  DB_NISI_BETA: imgPath + \"nisi-b.png\",\n  DB_NISI_GAMMA: imgPath + \"nisi-c.png\",\n  DB_NISI_DELTA: imgPath + \"nisi-d.png\",\n  DB_JUDGMENT_ALPHA: imgPath + \"judgment-a.png\",\n  DB_JUDGMENT_BETA: imgPath + \"judgment-b.png\",\n  DB_JUDGMENT_GAMMA: imgPath + \"judgment-c.png\",\n  DB_JUDGMENT_DELTA: imgPath + \"judgment-d.png\",\n  ROLE_TANK: imgPath + \"role-tank.png\",\n  ROLE_HEALER: imgPath + \"role-healer.png\",\n  ROLE_DPS: imgPath + \"role-ranged.png\",\n}\n\nconst GameState = {\n\tSETUP: \"setup\",\n\tREADY: \"ready\",\n\tRUNNING: \"running\",\n\tROUND_END: \"round_end\",\n\tGAME_END: \"game_end\",\n}\n\nconst Role = {\n  TANK: \"tank\",\n  HEALER: \"healer\",\n  MELEE: \"melee\",\n  RANGED: \"ranged\",\n  CASTER: \"caster\",\n}\n\nconst PartyOrder = {\n  THD: {\n    [Role.TANK]:   100,\n    [Role.HEALER]: 200,\n    [Role.MELEE]:  300,\n    [Role.RANGED]: 300,\n    [Role.CASTER]: 300,\n  },\n  TDH: {\n    [Role.TANK]:   100,\n    [Role.HEALER]: 300,\n    [Role.MELEE]:  200,\n    [Role.RANGED]: 200,\n    [Role.CASTER]: 200,\n  },\n  HTD: {\n    [Role.TANK]:   200,\n    [Role.HEALER]: 100,\n    [Role.MELEE]:  300,\n    [Role.RANGED]: 300,\n    [Role.CASTER]: 300,\n  },\n  HDT: {\n    [Role.TANK]:   300,\n    [Role.HEALER]: 100,\n    [Role.MELEE]:  200,\n    [Role.RANGED]: 200,\n    [Role.CASTER]: 200,\n  },\n  DTH: {\n    [Role.TANK]:   200,\n    [Role.HEALER]: 300,\n    [Role.MELEE]:  100,\n    [Role.RANGED]: 100,\n    [Role.CASTER]: 100,\n  },\n  DHT: {\n    [Role.TANK]:   300,\n    [Role.HEALER]: 200,\n    [Role.MELEE]:  100,\n    [Role.RANGED]: 100,\n    [Role.CASTER]: 100,\n  },\n}\n\nconst Players = {\n  PLD: {\n    name: \"Defund Me\",\n    job: \"PLD\",\n    role: Role.TANK,\n    icon: Images.JOB_PLD,\n    sortOrder: 0,\n\tdebuffs: [],\n  },\n  WAR: {\n    name: \"Ardbert Ardbert\",\n    job: \"WAR\",\n    role: Role.TANK,\n    icon: Images.JOB_WAR,\n    sortOrder: 1,\n\tdebuffs: [],\n  },\n  DRK: {\n    name: \"Fray's Pal\",\n    job: \"DRK\",\n    role: Role.TANK,\n    icon: Images.JOB_DRK,\n    sortOrder: 2,\n\tdebuffs: [],\n  },\n  GNB: {\n    name: \"Junction Girlfriend\",\n    job: \"GNB\",\n    role: Role.TANK,\n    icon: Images.JOB_GNB,\n    sortOrder: 3,\n\tdebuffs: [],\n  },\n  WHM: {\n    name: \"Throw Rocks\",\n    job: \"WHM\",\n    role: Role.HEALER,\n    icon: Images.JOB_WHM,\n    sortOrder: 4,\n\tdebuffs: [],\n  },\n  SCH: {\n    name: \"Broil Bot\",\n    job: \"SCH\",\n    role: Role.HEALER,\n    icon: Images.JOB_SCH,\n    sortOrder: 5,\n\tdebuffs: [],\n  },\n  AST: {\n    name: \"Seto Kaiba\",\n    job: \"AST\",\n    role: Role.HEALER,\n    icon: Images.JOB_AST,\n    sortOrder: 6,\n\tdebuffs: [],\n  },\n  MNK: {\n    name: \"Anatman Opener\",\n    job: \"MNK\",\n    role: Role.MELEE,\n    icon: Images.JOB_MNK,\n    sortOrder: 7,\n\tdebuffs: [],\n  },\n  DRG: {\n    name: \"Res Pls\",\n    job: \"DRG\",\n    role: Role.MELEE,\n    icon: Images.JOB_DRG,\n    sortOrder: 8,\n\tdebuffs: [],\n  },\n  NIN: {\n    name: \"Minecraft Uzumaki\",\n    job: \"NIN\",\n    role: Role.MELEE,\n    icon: Images.JOB_NIN,\n    sortOrder: 9,\n\tdebuffs: [],\n  },\n  SAM: {\n    name: \"Blade Studier\",\n    job: \"SAM\",\n    role: Role.MELEE,\n    icon: Images.JOB_SAM,\n    sortOrder: 10,\n\tdebuffs: [],\n  },\n  BRD: {\n    name: \"Hatsune Miku\",\n    job: \"BRD\",\n    role: Role.RANGED,\n    icon: Images.JOB_BRD,\n    sortOrder: 11,\n\tdebuffs: [],\n  },\n  MCH: {\n    name: \"Wonder Shot\",\n    job: \"MCH\",\n    role: Role.RANGED,\n    icon: Images.JOB_MNK,\n    sortOrder: 12,\n\tdebuffs: [],\n  },\n  DNC: {\n    name: \"Beethoven Virus\",\n    job: \"DNC\",\n    role: Role.RANGED,\n    icon: Images.JOB_DNC,\n    sortOrder: 13,\n\tdebuffs: [],\n  },\n  BLM: {\n    name: \"Megu Min\",\n    job: \"BLM\",\n    role: Role.CASTER,\n    icon: Images.JOB_BLM,\n    sortOrder: 14,\n\tdebuffs: [],\n  },\n  SMN: {\n    name: \"Bahamut F***er\",\n    job: \"SMN\",\n    role: Role.CASTER,\n    icon: Images.JOB_SMN,\n    sortOrder: 15,\n\tdebuffs: [],\n  },\n  RDM: {\n    name: \"Verjoke Vername\",\n    job: \"RDM\",\n    role: Role.CASTER,\n    icon: Images.JOB_RDM,\n    sortOrder: 16,\n\tdebuffs: [],\n  }\n}\n\nconst Jobs = {\n  TANK: [Players.PLD, Players.WAR, Players.DRK, Players.GNB],\n  HEALER: [Players.WHM, Players.SCH, Players.AST],\n  MELEE: [Players.MNK, Players.DRG, Players.NIN, Players.SAM],\n  RANGED: [Players.BRD, Players.MCH, Players.DNC],\n  CASTER: [Players.BLM, Players.SMN, Players.RDM]\n}\n  \nconst DbType = {\n\tNISI: \"nisi\",\n\tJUDGMENT: \"judgment\",\n}\n\nconst Debuffs = {\n\tLIGHTNING_VULN: {\n\t\tname: \"Lightning Resistance Down II\",\n\t\ticon: Images.DB_LIGHTNING_VULN,\n\t\ttype: null,\n\t\tsortOrder: 0\n\t},\n\tWATER_VULN: {\n\t\tname: \"Water Resistance Down II\",\n\t\ticon: Images.DB_WATER_VULN,\n\t\ttype: null,\n\t\tsortOrder: 0\n\t},\n\tPENALTY: {\n\t\tname: \"Final Judgment: Penalty III\",\n\t\ticon: Images.DB_PENALTY,\n\t\ttype: null,\n\t\tsortOrder: 1\n\t},\n\tCOMPRESSED_LIGHTNING: {\n\t\tname: \"Compressed Lightning\",\n\t\ticon: Images.DB_COMPRESSED_LIGHTNING,\n\t\ttype: null,\n\t\tsortOrder: 2\n\t},\n\tCOMPRESSED_WATER: {\n\t\tname: \"Compressed Water\",\n\t\ticon: Images.DB_COMPRESSED_WATER,\n\t\ttype: null,\n\t\tsortOrder: 2\n\t},\n\tNISI_ALPHA: {\n\t\tname: \"Final Decree Nisi α\",\n\t\ticon: Images.DB_NISI_ALPHA,\n\t\ttype: DbType.NISI,\n\t\tsortOrder: 3\n\t},\n\tNISI_BETA: {\n\t\tname: \"Final Decree Nisi β\",\n\t\ticon: Images.DB_NISI_BETA,\n\t\ttype: DbType.NISI,\n\t\tsortOrder: 3\n\t},\n\tNISI_GAMMA: {\n\t\tname: \"Final Decree Nisi γ\",\n\t\ticon: Images.DB_NISI_GAMMA,\n\t\ttype: DbType.NISI,\n\t\tsortOrder: 3\n\t},\n\tNISI_DELTA: {\n\t\tname: \"Final Decree Nisi δ\",\n\t\ticon: Images.DB_NISI_DELTA,\n\t\ttype: DbType.NISI,\n\t\tsortOrder: 3\n\t},\n\tJUDGMENT_ALPHA: {\n\t\tname: \"Final Judgment: Decree Nisi α\",\n\t\ticon: Images.DB_JUDGMENT_ALPHA,\n\t\ttype: DbType.JUDGMENT,\n\t\tsortOrder: 4\n\t},\n\tJUDGMENT_BETA: {\n\t\tname: \"Final Judgment: Decree Nisi β\",\n\t\ticon: Images.DB_JUDGMENT_BETA,\n\t\ttype: DbType.JUDGMENT,\n\t\tsortOrder: 4\n\t},\n\tJUDGMENT_GAMMA: {\n\t\tname: \"Final Judgment: Decree Nisi γ\",\n\t\ticon: Images.DB_JUDGMENT_GAMMA,\n\t\ttype: DbType.JUDGMENT,\n\t\tsortOrder: 4\n\t},\n\tJUDGMENT_DELTA: {\n\t\tname: \"Final Judgment: Decree Nisi δ\",\n\t\ticon: Images.DB_JUDGMENT_DELTA,\n\t\ttype: DbType.JUDGMENT,\n\t\tsortOrder: 4\n\t},\t\n}\n\n// ====================\n// = REACT COMPONENTS =\n// ====================\n\n\n// *************\n// * Simulator *\n// *************\n\nclass Simulator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pcJob: null,\n      partyOrder: null,\n      party: null,\n      correctIndex: null,\n      turn: 0,\n      score: 0,\n      gameState: GameState.SETUP,\n    };\n  }\n\n  setPcJob(job) {\n    this.setState({pcJob: job});\n  }\n\n  setPartyOrder(order) {\n    this.setState({partyOrder: order});\n  }\n\n  completeSetup() {\n    this.setState({\n      party: generateParty(Players[this.state.pcJob], PartyOrder[this.state.partyOrder]),\n      gameState: GameState.READY,\n    });\n  }\n\n  startGame() {\n    if (this.state.turn < 20) {\n      this.setState({\n        turn: this.state.turn + 1,\n        gameState: GameState.RUNNING,\n      });\n\n      assignDebuffs(this.state.party);\n    }\n    \n  }\n  \n  render() {\n    let gstate = this.state.gameState;\n    if (gstate === GameState.SETUP) {\n      return (\n        <div>\n          <div className=\"flex-row setup-menu\">\n            <SelectJobFrame \n              selectedJob={this.state.pcJob}\n              handler={j => this.setPcJob(j)}\n            />\n            <SelectPartyOrderFrame\n              selectedOrder = {this.state.partyOrder}\n              handler={o => this.setPartyOrder(o)}\n            />\n          </div>\n          <EndSetupButton \n            pcJob={this.state.pcJob} \n            partyOrder={this.state.partyOrder}\n            onClick={() => this.completeSetup()}\n          />\n        </div>\n      );\n    }\n    else if (gstate === GameState.READY) {\n      return (\n        <div>\n          <div className=\"flex-row setup-menu\">\n            <PlayerJobFrame job={this.state.pcJob}/>\n            <PartyOrderFrame order={this.state.partyOrder}/>\n          </div>\n          <ReadyPrompt onClick={() => this.startGame()}/>\n          <PartyFrame party={this.state.party}/>\n        </div>\n      );\n    }\n    else if (gstate === GameState.RUNNING) {\n      return (\n        <div>\n          <div className=\"flex-row setup-menu\">\n            <PlayerJobFrame job={this.state.pcJob}/>\n            <PartyOrderFrame order={this.state.partyOrder}/>\n          </div>\n          <RunningPrompt/>\n          <PartyFrame party={this.state.party}/>\n        </div>\n      );\n    }\n    else if (gstate === GameState.ROUND_END) {\n      // show result and prompt for next round\n    }\n    else if (gstate === GameState.GAME_END) {\n      // show final results and prompt for restart/setup\n    }\n  }\n}\n\n// ***************\n// * Setup Phase *\n// ***************\n\nclass SelectJobFrame extends React.Component {\n  genButton(job) {\n    return (\n      <SelectJobButton \n        key={job}\n        job={job} \n        onClick={() => this.props.handler(job)}\n      />\n    );\n  }\n\n  render() {\n    if (this.props.selectedJob === null) {\n      let tankButtons = Jobs.TANK.map(p => this.genButton(p.job));\n      let healerButtons = Jobs.HEALER.map(p => this.genButton(p.job));\n      let meleeButtons = Jobs.MELEE.map(p => this.genButton(p.job));\n      let rangedButtons = Jobs.RANGED.map(p => this.genButton(p.job));\n      let casterButtons = Jobs.CASTER.map(p => this.genButton(p.job));\n      \n      return (\n        <div className=\"select-job-frame\">\n          <h2>Select Your Job</h2>\n          {tankButtons}<br/>\n          {healerButtons}<br/>\n          {meleeButtons}<br/>\n          {rangedButtons}<br/>\n          {casterButtons}\n        </div>\n      );\n    }\n    else {\n      return (\n        <div className=\"select-job-frame\">\n          <h2>Your Job:</h2>\n          <h2> \n            <img className=\"job-icon\"\n              src={Players[this.props.selectedJob].icon}\n              alt={this.props.selectedJob}\n            />\n            {this.props.selectedJob}\n          </h2>\n          <button onClick={() => this.props.handler(null)}>\n            Select New Job\n          </button>\n        </div>\n      );\n    }\n  }\n}\n\nfunction SelectJobButton(props) {\n  return (\n    <button className=\"select-job\" onClick={props.onClick}>\n      <img className=\"job-icon\" \n        src={Players[props.job].icon} \n        alt={props.job}\n      />\n    </button>\n  );\n}\n\nclass SelectPartyOrderFrame extends React.Component {\n  render() {\n    let h = this.props.handler;\n\n    if (this.props.selectedOrder === null) {\n      return (\n        <div className=\"select-order-frame\">\n          <h2>Select Party Order</h2>\n          <button className=\"party-order\" onClick={() => h(\"THD\")}>\n            {generateOrderLabel(\"THD\")}\n          </button>\n          <button className=\"party-order\" onClick={() => h(\"TDH\")}>\n            {generateOrderLabel(\"TDH\")}\n          </button>\n          <button className=\"party-order\" onClick={() => h(\"HTD\")}>\n            {generateOrderLabel(\"HTD\")}\n          </button>\n          <button className=\"party-order\" onClick={() => h(\"HDT\")}>\n            {generateOrderLabel(\"HDT\")}\n          </button>\n          <button className=\"party-order\" onClick={() => h(\"DTH\")}>\n            {generateOrderLabel(\"DTH\")}\n          </button>\n          <button className=\"party-order\" onClick={() => h(\"DHT\")}>\n            {generateOrderLabel(\"DHT\")}\n          </button>\n          <p><i>(You will always appear at the top.)</i></p>\n        </div>\n      );\n    }\n    else {\n      return (\n        <div className=\"select-order-frame\">\n          <h2>Your Party Order:</h2>\n          <div>\n            {generateOrderLabel(this.props.selectedOrder)}\n          </div>\n          <p><i>(You will always appear at the top.)</i></p>\n          <button onClick={() => h(null)}>\n            Select New Party Order\n          </button>\n        </div>\n      );\n    }\n  }\n}\n\nfunction EndSetupButton(props) {\n  if (props.pcJob !== null && props.partyOrder !== null) {\n    return (\n      <div className=\"end-setup-container\">\n        <button className=\"end-setup\" onClick={props.onClick}>\n          All set!\n        </button>\n      </div>\n    );\n  }\n  return null;\n}\n\n// ***************\n// * Ready Phase *\n// ***************\n\nfunction PlayerJobFrame(props) {\n  return (\n    <div><strong>\n      Your Job:&nbsp;\n      <img className=\"job-icon-sm\" src={Players[props.job].icon} alt={props.job}/>&nbsp;\n      {props.job}\n    </strong></div>\n  );\n}\n\nfunction PartyOrderFrame(props) {\n  return (\n    <div>\n      <strong>Party Order:&nbsp;</strong>\n      {generateOrderLabel(props.order)}\n    </div>\n  );\n}\n\nfunction ReadyPrompt(props) {\n  return (\n    <div>\n      <div className=\"flex-row setup-menu\">\n        <div className=\"ready-prompt\">\n          <p>I've made a party for you below. The job you picked is at the top.</p>\n          <p>When you hit the go button, the party will be hit with a suite of debuffs \n          that represent a possible state right after Brute Justice casts Verdict.</p>\n          <p>You will have <strong>8 seconds</strong> to identify and click your\n          partner, which is the amount of time between Verdict resolving and Plasma\n          shield spawning.</p>\n          <p>This exercise will repeat 20 times, or until you choose to quit. At the\n          end of your session, I'll count up your successes and give you a score. Aim\n          for the top!</p>\n        </div>\n      </div>\n      <div className=\"go-wrapper\">\n        <button className=\"go-button\" onClick={props.onClick}>\n          Let's Do Some Math!\n        </button>\n      </div>\n    </div>\n  );\n}\n\nclass PartyFrame extends React.Component {\n  render() {\n    let pData = this.props.party.map((m, i) => {\n        return <Player key={m.job} index={i} data={m}/>;\n      });\n\n    return (\n      <table className=\"party-frame\">\n        <tbody>\n          {pData}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nclass Player extends React.Component {\n  render() {\n    let data = this.props.data;\n    let idx = this.props.index + 1;\n    let debuffs = data.debuffs == null ? null : data.debuffs.map((d, i) => {\n      return <Debuff key={i} debuff={d}/>;\n    });\n\n    return (\n      <tr className=\"player-row\">\n        <td>\n          <img className=\"job-icon\" src={data.icon} alt={data.job} />\n        </td>\n        <td>\n          <div className=\"castbar-row\"></div>\n          <div className=\"name-row flex-row\">\n            <div className=\"player-index\">{idx}</div>\n            <div className=\"player-level\">Lv80</div>\n            <div className=\"player-name\">{data.name}</div>\n          </div>\n          <div className=\"vital-bars flex-row\">\n            <div className=\"hp\">\n              <div className=\"bar hp-bar\"></div>\n              <div className=\"bar-num\">100000</div>\n            </div>\n            <div className=\"mp\">\n              <div className=\"bar\"></div>\n              <div className=\"bar-num\">\n                100<span className=\"mp-small\">00</span>\n              </div>\n            </div>\n          </div>\n        </td>\n        <td className=\"debuff-frame\">{debuffs}</td>\n      </tr>\n    );\n  }\n}\n\nfunction Debuff(props) {\n  return <img className=\"debuff\" src={props.debuff.icon} alt={props.debuff.name}/>;\n}\n\n// *****************\n// * Running Phase *\n// *****************\n\nfunction RunningPrompt(props) {\n  return (\n    <div>\n      <div className=\"flex-row setup-menu\">\n        <div className=\"ready-prompt hijacked-prompt\">\n          <p>Designation: Brute Justice. Temporal interlopers identified.</p>\n          <p>Verdict: Guilty. Punishment: Execution!</p>\n          <p>Initiating new combat protocol... Commence final judgment!</p>\n        </div>\n      </div>\n      <div className=\"go-wrapper hijacked-prompt\">\n        <p>Identify your partner.</p>\n      </div>\n    </div>\n  );\n}\n\n\n// ===================\n// = UTILITY METHODS =\n// ===================\n\nfunction shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n}\n\nfunction generateParty(pcJob, partyOrder) {\n\tconsole.log(pcJob);\n  let party = [];\n  let numTanks = 2 - (pcJob.role === Role.TANK ? 1 : 0);\n  let numHealers = 2 - (pcJob.role === Role.HEALER ? 1 : 0);\n  let numMelee = (Math.random() * 2 | 0) + 1;\n  let numRanged = 1 - (pcJob.role === Role.RANGED ? 1 : 0);\n  let numCasters = 3 - numMelee - (pcJob.role === Role.CASTER ? 1 : 0);\n  numMelee -= (pcJob.role === Role.MELEE ? 1 : 0);\n\t// tanks\n\tlet tanks = Jobs.TANK.slice();\n\tshuffleArray(tanks);\n\tfor (let i = 0; i < numTanks; i++) \n    party.push({...tanks[i]});\n\t// healers\n\tlet healers = Jobs.HEALER.slice();\n\tshuffleArray(healers);\n\tfor (let i = 0; i < numHealers; i++) \n    party.push({...healers[i]});\n\t// melee\n\tlet melee = Jobs.MELEE.slice();\n\tshuffleArray(melee);\n\tfor (let i = 0; i < numMelee; i++) \n    party.push({...melee[i]});\n\t// ranged\n\tlet ranged = Jobs.RANGED.slice();\n\tshuffleArray(ranged);\n  for (let i = 0; i < numRanged; i++)\n\tparty.push({...ranged[i]});\n\t// casters\n\tlet casters = Jobs.CASTER.slice();\n\tshuffleArray(casters);\n\tfor (let i = 0; i < numCasters; i++) \n    party.push({...casters[i]});\n\n  party.sort((a, b) => (a.sortOrder + partyOrder[a.role]) - (b.sortOrder + partyOrder[b.role]));\n\n  let fullParty = [{...pcJob}].concat(party);\n\t\n\treturn fullParty;\t\n}\n\nfunction assignDebuffs(party) {\n\t// each player starts with penalty\n\tparty.forEach(m => m.debuffs = [Debuffs.PENALTY]);\n\t// one random healer gets lightning (removes from pool)\n\tlet healers = party.filter(m => m.role === Role.HEALER);\n\tshuffleArray(healers);\n\thealers.pop().debuffs.push(Debuffs.COMPRESSED_LIGHTNING);\n\t// create a pool of ranged + unused healer from above\n\tlet pool = party.filter(m => m.role === Role.RANGED || m.role === Role.CASTER).concat(healers);\n\tshuffleArray(pool);\n\t// compressed water on random ranged/healer (removes from pool)\n\tpool.pop().debuffs.push(Debuffs.COMPRESSED_WATER);\n\t// water vuln on random ranged/healer\n\tpool.pop().debuffs.push(Debuffs.WATER_VULN);\n\t// lightning vuln on \"random\" tank (we don't know who's tanking BJ)\n\tlet tanks = party.filter(m => m.role === Role.TANK);\n\tshuffleArray(tanks);\n\ttanks.pop().debuffs.push(Debuffs.LIGHTNING_VULN);\n\t// judgment (set 1) on all T/H\n\tlet th = party.filter(m => m.role === Role.TANK || m.role === Role.HEALER);\n\tshuffleArray(th);\n\tth[0].debuffs.push(Debuffs.JUDGMENT_ALPHA);\n\tth[1].debuffs.push(Debuffs.JUDGMENT_BETA);\n\tth[2].debuffs.push(Debuffs.JUDGMENT_GAMMA);\n\tth[3].debuffs.push(Debuffs.JUDGMENT_DELTA);\n\t// judgment (set 1) on all DPS\n\tlet dps = party.filter(m => m.role === Role.MELEE || m.role === Role.RANGED || m.role === Role.CASTER);\n\tshuffleArray(dps);\n\tdps[0].debuffs.push(Debuffs.JUDGMENT_ALPHA);\n\tdps[1].debuffs.push(Debuffs.JUDGMENT_BETA);\n\tdps[2].debuffs.push(Debuffs.JUDGMENT_GAMMA);\n\tdps[3].debuffs.push(Debuffs.JUDGMENT_DELTA);\n\t// nisi on either all T/H or all DPS\n\tlet nisi = (((Math.random() * 2 | 0) === 1) ? th : dps);\n\tshuffleArray(nisi);\n\tnisi[0].debuffs.push(Debuffs.NISI_ALPHA);\n\tnisi[1].debuffs.push(Debuffs.NISI_BETA);\n\tnisi[2].debuffs.push(Debuffs.NISI_GAMMA);\n\tnisi[3].debuffs.push(Debuffs.NISI_DELTA);\n\t// sort debuffs\n\tparty.forEach(m => m.debuffs.sort((a, b) => a.sortOrder - b.sortOrder));\n}\n\nfunction generateOrderLabel(order) {\n  let spans = [];\n  for (let i = 0; i < order.length; i++) {\n    let c = order.charAt(i);\n    if (c === 'T') {\n      spans.push(\n        <span className=\"order-sp\" key=\"T\">\n          <img className=\"role-icon\" src={Images.ROLE_TANK} alt=\"Tank\"/> Tank\n        </span>\n      );\n    }\n    else if (c === 'H') {\n      spans.push(\n        <span className=\"order-sp\" key=\"H\">\n          <img className=\"role-icon\" src={Images.ROLE_HEALER} alt=\"Healer\"/> Healer\n        </span>\n      );\n    }\n    else if (c === 'D') {\n      spans.push(\n        <span className=\"order-sp\" key=\"D\">\n          <img className=\"role-icon\" src={Images.ROLE_DPS} alt=\"DPS\"/> DPS\n        </span>\n      );\n    }\n  }\n  return spans;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}