{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","className","role","aria-label","Images","JOB_PLD","imgPath","JOB_WAR","JOB_DRK","JOB_GNB","JOB_WHM","JOB_SCH","JOB_AST","JOB_MNK","JOB_DRG","JOB_NIN","JOB_SAM","JOB_BRD","JOB_MCH","JOB_DNC","JOB_BLM","JOB_SMN","JOB_RDM","DB_COMPRESSED_WATER","DB_COMPRESSED_LIGHTNING","DB_WATER_VULN","DB_LIGHTNING_VULN","DB_PENALTY","DB_NISI_ALPHA","DB_NISI_BETA","DB_NISI_GAMMA","DB_NISI_DELTA","DB_JUDGMENT_ALPHA","DB_JUDGMENT_BETA","DB_JUDGMENT_GAMMA","DB_JUDGMENT_DELTA","ROLE_TANK","ROLE_HEALER","ROLE_DPS","GameState","RowState","Role","TANK","HEALER","MELEE","RANGED","CASTER","PartyOrder","THD","TDH","HTD","HDT","DTH","DHT","Players","PLD","name","job","icon","sortOrder","debuffs","WAR","DRK","GNB","WHM","SCH","AST","MNK","DRG","NIN","SAM","BRD","MCH","DNC","BLM","SMN","RDM","Jobs","DbType","DbCode","ALPHA","BETA","GAMME","DELTA","Debuffs","LIGHTNING_VULN","type","WATER_VULN","PENALTY","COMPRESSED_LIGHTNING","COMPRESSED_WATER","NISI_ALPHA","code","NISI_BETA","NISI_GAMMA","GAMMA","NISI_DELTA","JUDGMENT_ALPHA","JUDGMENT_BETA","JUDGMENT_GAMMA","JUDGMENT_DELTA","Simulator","props","state","pcJob","partyOrder","party","correctIndex","selectedIndex","turn","score","gameState","this","setState","order","generateParty","partOrder","m","forEach","healers","filter","shuffleArray","pop","push","pool","concat","tanks","th","dps","nisi","Math","random","sort","a","b","assignDebuffs","findBuddyIndex","console","log","index","gstate","selectedJob","handler","j","setPcJob","selectedOrder","o","setPartyOrder","EndSetupButton","onClick","completeSetup","PlayerJobFrame","PartyOrderFrame","ReadyPrompt","startGame","active","RunningPrompt","i","pickAnswer","callback","timeExpired","correct","selected","toNextRound","toReady","goToReady","toSetup","goToSetup","React","Component","SelectJobFrame","SelectJobButton","key","tankButtons","map","p","genButton","healerButtons","meleeButtons","rangedButtons","casterButtons","src","alt","SelectPartyOrderFrame","h","generateOrderLabel","PartyFrame","pData","states","data","colSpan","Player","cName","idx","d","Debuff","debuff","CountdownFrame","ResultFrame","msg","array","length","floor","numTanks","numHealers","numMelee","numRanged","numCasters","slice","melee","ranged","casters","spans","c","charAt","targetType","targetCode","player","targetRoles","includes","playerNisiArr","playerJudgmentArr","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1c05dd47.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction App() {\n\treturn (\n    <div>\n      <div className=\"title\">\n        <h1>\n          <span role=\"img\" aria-label=\"green tea emoji\">🍵</span>\n          &nbsp;Matcha Nisi Simulator&nbsp;\n          <span role=\"img\" aria-label=\"green tea emoji\">🍵</span>\n        </h1>\n        <h3>by Katryna Evalindra @ Adamantoise, for Untilted Matcha Static</h3>\n      </div>\n      <Simulator/>\n    </div>\n\t);\n}\n\nexport default App;\n\n// =============\n// = CONSTANTS =\n// =============\n\nconst imgPath = \"img/\";\nconst Images = {\n  JOB_PLD: imgPath + \"Paladin_Icon_3.png\",\n  JOB_WAR: imgPath + \"Warrior_Icon_3.png\",\n  JOB_DRK: imgPath + \"Dark_Knight_Icon_3.png\",\n  JOB_GNB: imgPath + \"Gunbreaker_Icon_3.png\",\n  JOB_WHM: imgPath + \"White_Mage_Icon_3.png\",\n  JOB_SCH: imgPath + \"Scholar_Icon_3.png\",\n  JOB_AST: imgPath + \"Astrologian_Icon_3.png\",\n  JOB_MNK: imgPath + \"Monk_Icon_3.png\",\n  JOB_DRG: imgPath + \"Dragoon_Icon_3.png\",\n  JOB_NIN: imgPath + \"Ninja_Icon_3.png\",\n  JOB_SAM: imgPath + \"Samurai_Icon_3.png\",\n  JOB_BRD: imgPath + \"Bard_Icon_3.png\",\n  JOB_MCH: imgPath + \"Machinist_Icon_3.png\",\n  JOB_DNC: imgPath + \"Dancer_Icon_3.png\",\n  JOB_BLM: imgPath + \"Black_Mage_Icon_3.png\",\n  JOB_SMN: imgPath + \"Summoner_Icon_3.png\",\n  JOB_RDM: imgPath + \"Red_Mage_Icon_3.png\",\n  DB_COMPRESSED_WATER: imgPath + \"compressed-water.png\",\n  DB_COMPRESSED_LIGHTNING: imgPath + \"compressed-lightning.png\",\n  DB_WATER_VULN: imgPath + \"water-res-down.png\",\n  DB_LIGHTNING_VULN: imgPath + \"lightning-res-down.png\",\n  DB_PENALTY: imgPath + \"penalty.png\",\n  DB_NISI_ALPHA: imgPath + \"nisi-a.png\",\n  DB_NISI_BETA: imgPath + \"nisi-b.png\",\n  DB_NISI_GAMMA: imgPath + \"nisi-c.png\",\n  DB_NISI_DELTA: imgPath + \"nisi-d.png\",\n  DB_JUDGMENT_ALPHA: imgPath + \"judgment-a.png\",\n  DB_JUDGMENT_BETA: imgPath + \"judgment-b.png\",\n  DB_JUDGMENT_GAMMA: imgPath + \"judgment-c.png\",\n  DB_JUDGMENT_DELTA: imgPath + \"judgment-d.png\",\n  ROLE_TANK: imgPath + \"role-tank.png\",\n  ROLE_HEALER: imgPath + \"role-healer.png\",\n  ROLE_DPS: imgPath + \"role-ranged.png\",\n}\n\nconst GameState = {\n\tSETUP: \"setup\",\n\tREADY: \"ready\",\n\tRUNNING: \"running\",\n\tROUND_END: \"round_end\",\n\tGAME_END: \"game_end\",\n}\n\nconst RowState = {\n  ACTIVE: \"pr-active\",\n  CORRECT: \"pr-correct\",\n  INCORRECT: \"pr-incorrect\",\n  SOLUTION: \"pr-solution\",\n}\n\nconst Role = {\n  TANK: \"tank\",\n  HEALER: \"healer\",\n  MELEE: \"melee\",\n  RANGED: \"ranged\",\n  CASTER: \"caster\",\n}\n\nconst PartyOrder = {\n  THD: {\n    [Role.TANK]:   100,\n    [Role.HEALER]: 200,\n    [Role.MELEE]:  300,\n    [Role.RANGED]: 300,\n    [Role.CASTER]: 300,\n  },\n  TDH: {\n    [Role.TANK]:   100,\n    [Role.HEALER]: 300,\n    [Role.MELEE]:  200,\n    [Role.RANGED]: 200,\n    [Role.CASTER]: 200,\n  },\n  HTD: {\n    [Role.TANK]:   200,\n    [Role.HEALER]: 100,\n    [Role.MELEE]:  300,\n    [Role.RANGED]: 300,\n    [Role.CASTER]: 300,\n  },\n  HDT: {\n    [Role.TANK]:   300,\n    [Role.HEALER]: 100,\n    [Role.MELEE]:  200,\n    [Role.RANGED]: 200,\n    [Role.CASTER]: 200,\n  },\n  DTH: {\n    [Role.TANK]:   200,\n    [Role.HEALER]: 300,\n    [Role.MELEE]:  100,\n    [Role.RANGED]: 100,\n    [Role.CASTER]: 100,\n  },\n  DHT: {\n    [Role.TANK]:   300,\n    [Role.HEALER]: 200,\n    [Role.MELEE]:  100,\n    [Role.RANGED]: 100,\n    [Role.CASTER]: 100,\n  },\n}\n\nconst Players = {\n  PLD: {\n    name: \"Defund Me\",\n    job: \"PLD\",\n    role: Role.TANK,\n    icon: Images.JOB_PLD,\n    sortOrder: 0,\n\tdebuffs: [],\n  },\n  WAR: {\n    name: \"Ardbert Ardbert\",\n    job: \"WAR\",\n    role: Role.TANK,\n    icon: Images.JOB_WAR,\n    sortOrder: 1,\n\tdebuffs: [],\n  },\n  DRK: {\n    name: \"Fray's Pal\",\n    job: \"DRK\",\n    role: Role.TANK,\n    icon: Images.JOB_DRK,\n    sortOrder: 2,\n\tdebuffs: [],\n  },\n  GNB: {\n    name: \"Junction Girlfriend\",\n    job: \"GNB\",\n    role: Role.TANK,\n    icon: Images.JOB_GNB,\n    sortOrder: 3,\n\tdebuffs: [],\n  },\n  WHM: {\n    name: \"Throw Rocks\",\n    job: \"WHM\",\n    role: Role.HEALER,\n    icon: Images.JOB_WHM,\n    sortOrder: 4,\n\tdebuffs: [],\n  },\n  SCH: {\n    name: \"Broil Bot\",\n    job: \"SCH\",\n    role: Role.HEALER,\n    icon: Images.JOB_SCH,\n    sortOrder: 5,\n\tdebuffs: [],\n  },\n  AST: {\n    name: \"Seto Kaiba\",\n    job: \"AST\",\n    role: Role.HEALER,\n    icon: Images.JOB_AST,\n    sortOrder: 6,\n\tdebuffs: [],\n  },\n  MNK: {\n    name: \"Anatman Opener\",\n    job: \"MNK\",\n    role: Role.MELEE,\n    icon: Images.JOB_MNK,\n    sortOrder: 7,\n\tdebuffs: [],\n  },\n  DRG: {\n    name: \"Res Pls\",\n    job: \"DRG\",\n    role: Role.MELEE,\n    icon: Images.JOB_DRG,\n    sortOrder: 8,\n\tdebuffs: [],\n  },\n  NIN: {\n    name: \"Minecraft Uzumaki\",\n    job: \"NIN\",\n    role: Role.MELEE,\n    icon: Images.JOB_NIN,\n    sortOrder: 9,\n\tdebuffs: [],\n  },\n  SAM: {\n    name: \"Blade Studier\",\n    job: \"SAM\",\n    role: Role.MELEE,\n    icon: Images.JOB_SAM,\n    sortOrder: 10,\n\tdebuffs: [],\n  },\n  BRD: {\n    name: \"Hatsune Miku\",\n    job: \"BRD\",\n    role: Role.RANGED,\n    icon: Images.JOB_BRD,\n    sortOrder: 11,\n\tdebuffs: [],\n  },\n  MCH: {\n    name: \"Wonder Shot\",\n    job: \"MCH\",\n    role: Role.RANGED,\n    icon: Images.JOB_MCH,\n    sortOrder: 12,\n\tdebuffs: [],\n  },\n  DNC: {\n    name: \"Beethoven Virus\",\n    job: \"DNC\",\n    role: Role.RANGED,\n    icon: Images.JOB_DNC,\n    sortOrder: 13,\n\tdebuffs: [],\n  },\n  BLM: {\n    name: \"Megu Min\",\n    job: \"BLM\",\n    role: Role.CASTER,\n    icon: Images.JOB_BLM,\n    sortOrder: 14,\n\tdebuffs: [],\n  },\n  SMN: {\n    name: \"Bahamut F***er\",\n    job: \"SMN\",\n    role: Role.CASTER,\n    icon: Images.JOB_SMN,\n    sortOrder: 15,\n\tdebuffs: [],\n  },\n  RDM: {\n    name: \"Verjoke Vername\",\n    job: \"RDM\",\n    role: Role.CASTER,\n    icon: Images.JOB_RDM,\n    sortOrder: 16,\n\tdebuffs: [],\n  }\n}\n\nconst Jobs = {\n  TANK: [Players.PLD, Players.WAR, Players.DRK, Players.GNB],\n  HEALER: [Players.WHM, Players.SCH, Players.AST],\n  MELEE: [Players.MNK, Players.DRG, Players.NIN, Players.SAM],\n  RANGED: [Players.BRD, Players.MCH, Players.DNC],\n  CASTER: [Players.BLM, Players.SMN, Players.RDM]\n}\n  \nconst DbType = {\n\tNISI: \"nisi\",\n\tJUDGMENT: \"judgment\",\n}\n\nconst DbCode = {\n  ALPHA: \"alpha\",\n  BETA: \"beta\",\n  GAMME: \"gamma\",\n  DELTA: \"delta\",\n}\n\nconst Debuffs = {\n\tLIGHTNING_VULN: {\n\t\tname: \"Lightning Resistance Down II\",\n\t\ticon: Images.DB_LIGHTNING_VULN,\n\t\ttype: null,\n\t\tsortOrder: 0\n\t},\n\tWATER_VULN: {\n\t\tname: \"Water Resistance Down II\",\n\t\ticon: Images.DB_WATER_VULN,\n\t\ttype: null,\n\t\tsortOrder: 0\n\t},\n\tPENALTY: {\n\t\tname: \"Final Judgment: Penalty III\",\n\t\ticon: Images.DB_PENALTY,\n\t\ttype: null,\n\t\tsortOrder: 1\n\t},\n\tCOMPRESSED_LIGHTNING: {\n\t\tname: \"Compressed Lightning\",\n\t\ticon: Images.DB_COMPRESSED_LIGHTNING,\n\t\ttype: null,\n\t\tsortOrder: 2\n\t},\n\tCOMPRESSED_WATER: {\n\t\tname: \"Compressed Water\",\n\t\ticon: Images.DB_COMPRESSED_WATER,\n\t\ttype: null,\n\t\tsortOrder: 2\n\t},\n\tNISI_ALPHA: {\n\t\tname: \"Final Decree Nisi α\",\n\t\ticon: Images.DB_NISI_ALPHA,\n\t\ttype: DbType.NISI,\n    code: DbCode.ALPHA,\n\t\tsortOrder: 3\n\t},\n\tNISI_BETA: {\n\t\tname: \"Final Decree Nisi β\",\n\t\ticon: Images.DB_NISI_BETA,\n\t\ttype: DbType.NISI,\n    code: DbCode.BETA,\n\t\tsortOrder: 3\n\t},\n\tNISI_GAMMA: {\n\t\tname: \"Final Decree Nisi γ\",\n\t\ticon: Images.DB_NISI_GAMMA,\n\t\ttype: DbType.NISI,\n    code: DbCode.GAMMA,\n\t\tsortOrder: 3\n\t},\n\tNISI_DELTA: {\n\t\tname: \"Final Decree Nisi δ\",\n\t\ticon: Images.DB_NISI_DELTA,\n\t\ttype: DbType.NISI,\n    code: DbCode.DELTA,\n\t\tsortOrder: 3\n\t},\n\tJUDGMENT_ALPHA: {\n\t\tname: \"Final Judgment: Decree Nisi α\",\n\t\ticon: Images.DB_JUDGMENT_ALPHA,\n\t\ttype: DbType.JUDGMENT,\n    code: DbCode.ALPHA,\n\t\tsortOrder: 4\n\t},\n\tJUDGMENT_BETA: {\n\t\tname: \"Final Judgment: Decree Nisi β\",\n\t\ticon: Images.DB_JUDGMENT_BETA,\n\t\ttype: DbType.JUDGMENT,\n    code: DbCode.BETA,\n\t\tsortOrder: 4\n\t},\n\tJUDGMENT_GAMMA: {\n\t\tname: \"Final Judgment: Decree Nisi γ\",\n\t\ticon: Images.DB_JUDGMENT_GAMMA,\n\t\ttype: DbType.JUDGMENT,\n    code: DbCode.GAMMA,\n\t\tsortOrder: 4\n\t},\n\tJUDGMENT_DELTA: {\n\t\tname: \"Final Judgment: Decree Nisi δ\",\n\t\ticon: Images.DB_JUDGMENT_DELTA,\n\t\ttype: DbType.JUDGMENT,\n    code: DbCode.DELTA,\n\t\tsortOrder: 4\n\t},\t\n}\n\n// ====================\n// = REACT COMPONENTS =\n// ====================\n\n\n// *************\n// * Simulator *\n// *************\n\nclass Simulator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pcJob: null,\n      partyOrder: null,\n      party: null,\n      correctIndex: null,\n      selectedIndex: null,\n      turn: 0,\n      score: 0,\n      gameState: GameState.SETUP,\n    };\n  }\n\n  setPcJob(job) {\n    this.setState({pcJob: job});\n  }\n\n  setPartyOrder(order) {\n    this.setState({partyOrder: order});\n  }\n\n  completeSetup() {\n    this.setState({\n      party: generateParty(Players[this.state.pcJob], PartyOrder[this.state.partyOrder]),\n      gameState: GameState.READY,\n    });\n  }\n\n  goToSetup() {\n    this.setState({\n      pcJob: null,\n      partOrder: null,\n      party: null,\n      correctIndex: null,\n      selectedIndex: null,\n      turn: 0,\n      score: 0,\n      gameState: GameState.SETUP,\n    });\n  }\n\n  goToReady() {\n    for (let m in this.state.party) {\n      m.debuffs = [];\n    }\n    this.setState({\n      correctIndex: null,\n      selectedIndex: null,\n      turn: 0,\n      score: 0,\n      gameState: GameState.READY,\n    });\n  }\n\n  startGame() {\n    if (this.state.turn < 20) {\n      assignDebuffs(this.state.party);\n\n      this.setState({\n        turn: this.state.turn + 1,\n        correctIndex: findBuddyIndex(this.state.party),\n        gameState: GameState.RUNNING,\n      }, () => console.log(this.state.correctIndex));\n    }\n  }\n\n  pickAnswer(index) {\n    this.setState({\n      selectedIndex: index,\n      score: (this.correctIndex === index ? this.state.score + 1 : this.state.score),\n      gameState: GameState.ROUND_END,\n    });\n  }\n\n  timeExpired() {\n    this.setState({\n      gameState: GameState.ROUND_END,\n    })\n  }\n  \n  render() {\n    let gstate = this.state.gameState;\n    if (gstate === GameState.SETUP) {\n      return (\n        <div>\n          <div className=\"flex-row setup-menu\">\n            <SelectJobFrame \n              selectedJob={this.state.pcJob}\n              handler={j => this.setPcJob(j)}\n            />\n            <SelectPartyOrderFrame\n              selectedOrder = {this.state.partyOrder}\n              handler={o => this.setPartyOrder(o)}\n            />\n          </div>\n          <EndSetupButton \n            pcJob={this.state.pcJob} \n            partyOrder={this.state.partyOrder}\n            onClick={() => this.completeSetup()}\n          />\n        </div>\n      );\n    }\n    else if (gstate === GameState.READY) {\n      return (\n        <div>\n          <div className=\"flex-row setup-menu\">\n            <PlayerJobFrame job={this.state.pcJob}/>\n            <PartyOrderFrame order={this.state.partyOrder}/>\n          </div>\n          <ReadyPrompt onClick={() => this.startGame()}/>\n          <div className=\"flex-row\">\n            <PartyFrame \n              party={this.state.party} \n              active={false}\n            />\n          </div>\n        </div>\n      );\n    }\n    else if (gstate === GameState.RUNNING) {\n      return (\n        <div>\n          <div className=\"flex-row setup-menu\">\n            <PlayerJobFrame job={this.state.pcJob}/>\n            <PartyOrderFrame order={this.state.partyOrder}/>\n          </div>\n          <RunningPrompt/>\n          <div className=\"flex-row\">\n            <PartyFrame \n              party={this.state.party} \n              active={true}\n              onClick={i => this.pickAnswer(i)}\n            />\n            <CountdownFrame callback={() => this.timeExpired()}/>\n          </div>\n        </div>\n      );\n    }\n    else if (gstate === GameState.ROUND_END) {\n      return (\n        <div>\n          <div className=\"flex-row setup-menu\">\n            <PlayerJobFrame job={this.state.pcJob}/>\n            <PartyOrderFrame order={this.state.partyOrder}/>\n          </div>\n          <RunningPrompt/>\n          <div className=\"flex-row\">\n            <PartyFrame \n              party={this.state.party} \n              active={false}\n              correct={this.state.correctIndex}\n              selected={this.state.selectedIndex}\n            />\n            <ResultFrame \n              correct={this.state.correctIndex}\n              selected={this.state.selectedIndex}\n              turn={this.state.turn}\n              toNextRound={() => this.startGame()}\n              toReady={() => this.goToReady()}\n              toSetup={() => this.goToSetup()}\n            />\n          </div>\n\n        </div>\n      );\n    }\n    else if (gstate === GameState.GAME_END) {\n      // show final results and prompt for restart/setup\n    }\n  }\n}\n\n// ***************\n// * Setup Phase *\n// ***************\n\nclass SelectJobFrame extends React.Component {\n  genButton(job) {\n    return (\n      <SelectJobButton \n        key={job}\n        job={job} \n        onClick={() => this.props.handler(job)}\n      />\n    );\n  }\n\n  render() {\n    if (this.props.selectedJob === null) {\n      let tankButtons = Jobs.TANK.map(p => this.genButton(p.job));\n      let healerButtons = Jobs.HEALER.map(p => this.genButton(p.job));\n      let meleeButtons = Jobs.MELEE.map(p => this.genButton(p.job));\n      let rangedButtons = Jobs.RANGED.map(p => this.genButton(p.job));\n      let casterButtons = Jobs.CASTER.map(p => this.genButton(p.job));\n      \n      return (\n        <div className=\"select-job-frame\">\n          <h2>Select Your Job</h2>\n          {tankButtons}<br/>\n          {healerButtons}<br/>\n          {meleeButtons}<br/>\n          {rangedButtons}<br/>\n          {casterButtons}\n        </div>\n      );\n    }\n    else {\n      return (\n        <div className=\"select-job-frame\">\n          <h2>Your Job:</h2>\n          <h2> \n            <img className=\"job-icon\"\n              src={Players[this.props.selectedJob].icon}\n              alt={this.props.selectedJob}\n            />\n            {this.props.selectedJob}\n          </h2>\n          <button onClick={() => this.props.handler(null)}>\n            Select New Job\n          </button>\n        </div>\n      );\n    }\n  }\n}\n\nfunction SelectJobButton(props) {\n  return (\n    <button className=\"select-job\" onClick={props.onClick}>\n      <img className=\"job-icon\" \n        src={Players[props.job].icon} \n        alt={props.job}\n      />\n    </button>\n  );\n}\n\nclass SelectPartyOrderFrame extends React.Component {\n  render() {\n    let h = this.props.handler;\n\n    if (this.props.selectedOrder === null) {\n      return (\n        <div className=\"select-order-frame\">\n          <h2>Select Party Order</h2>\n          <button className=\"party-order\" onClick={() => h(\"THD\")}>\n            {generateOrderLabel(\"THD\")}\n          </button>\n          <button className=\"party-order\" onClick={() => h(\"TDH\")}>\n            {generateOrderLabel(\"TDH\")}\n          </button>\n          <button className=\"party-order\" onClick={() => h(\"HTD\")}>\n            {generateOrderLabel(\"HTD\")}\n          </button>\n          <button className=\"party-order\" onClick={() => h(\"HDT\")}>\n            {generateOrderLabel(\"HDT\")}\n          </button>\n          <button className=\"party-order\" onClick={() => h(\"DTH\")}>\n            {generateOrderLabel(\"DTH\")}\n          </button>\n          <button className=\"party-order\" onClick={() => h(\"DHT\")}>\n            {generateOrderLabel(\"DHT\")}\n          </button>\n          <p><i>(You will always appear at the top.)</i></p>\n        </div>\n      );\n    }\n    else {\n      return (\n        <div className=\"select-order-frame\">\n          <h2>Your Party Order:</h2>\n          <div>\n            {generateOrderLabel(this.props.selectedOrder)}\n          </div>\n          <p><i>(You will always appear at the top.)</i></p>\n          <button onClick={() => h(null)}>\n            Select New Party Order\n          </button>\n        </div>\n      );\n    }\n  }\n}\n\nfunction EndSetupButton(props) {\n  if (props.pcJob !== null && props.partyOrder !== null) {\n    return (\n      <div className=\"end-setup-container\">\n        <button className=\"end-setup\" onClick={props.onClick}>\n          All set!\n        </button>\n      </div>\n    );\n  }\n  return null;\n}\n\n// ***************\n// * Ready Phase *\n// ***************\n\nfunction PlayerJobFrame(props) {\n  return (\n    <div><strong>\n      Your Job:&nbsp;\n      <img className=\"job-icon-sm\" src={Players[props.job].icon} alt={props.job}/>&nbsp;\n      {props.job}\n    </strong></div>\n  );\n}\n\nfunction PartyOrderFrame(props) {\n  return (\n    <div>\n      <strong>Party Order:&nbsp;</strong>\n      {generateOrderLabel(props.order)}\n    </div>\n  );\n}\n\nfunction ReadyPrompt(props) {\n  return (\n    <div>\n      <div className=\"flex-row setup-menu\">\n        <div className=\"ready-prompt\">\n          <p>I've made a party for you below. The job you picked is at the top.</p>\n          <p>When you hit the go button, the party will be hit with a suite of debuffs \n          that represent a possible state right after Brute Justice casts Verdict.</p>\n          <p>You will have <strong>8 seconds</strong> to identify and click your\n          partner, which is the amount of time between Verdict resolving and Plasma\n          shield spawning. (NYI)</p>\n          <p>This exercise will repeat 20 times, or until you choose to quit. At the\n          end of your session, I'll count up your successes and give you a score. Aim\n          for the top!</p>\n        </div>\n      </div>\n      <div className=\"go-wrapper\">\n        <button className=\"go-button\" onClick={props.onClick}>\n          Let's Do Some Math!\n        </button>\n      </div>\n    </div>\n  );\n}\n\nclass PartyFrame extends React.Component {\n  render() {\n    let pData = this.props.party.map((m, i) => {\n        let states = [];\n        if (this.props.active)\n          states.push(RowState.ACTIVE);\n        if (i === this.props.correct && this.props.correct === this.props.selected)\n          states.push(RowState.CORRECT);\n        else if (i === this.props.correct)\n          states.push(RowState.SOLUTION);\n        else if (i === this.props.selected)\n          states.push(RowState.INCORRECT);\n        return (\n          <Player \n            key={m.job} \n            index={i} \n            data={m} \n            states={states}\n            onClick={() => this.props.onClick(i)}/>\n        );\n      });\n\n    return (\n      <table className=\"party-frame\">\n        <thead>\n          <tr><th colSpan=\"3\">FULL PARTY</th></tr>\n        </thead>\n        <tbody>\n          {pData}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nclass Player extends React.Component {\n  render() {\n    let cName = \"player-row\";\n    for (let state of this.props.states) {\n      cName += \" \" + state;\n    }\n    let data = this.props.data;\n    let idx = this.props.index + 1;\n    let debuffs = data.debuffs == null ? null : data.debuffs.map((d, i) => {\n      return <Debuff key={i} debuff={d}/>;\n    });\n\n    return (\n      <tr className={cName} onClick={this.props.onClick}>\n        <td>\n          <img className=\"job-icon\" src={data.icon} alt={data.job} />\n        </td>\n        <td>\n          <div className=\"castbar-row\"></div>\n          <div className=\"name-row flex-row\">\n            <div className=\"player-index\">{idx}</div>\n            <div className=\"player-level\">Lv80</div>\n            <div className=\"player-name\">{data.name}</div>\n          </div>\n          <div className=\"vital-bars flex-row\">\n            <div className=\"hp\">\n              <div className=\"bar hp-bar\"></div>\n              <div className=\"bar-num\">100000</div>\n            </div>\n            <div className=\"mp\">\n              <div className=\"bar\"></div>\n              <div className=\"bar-num\">\n                100<span className=\"mp-small\">00</span>\n              </div>\n            </div>\n          </div>\n        </td>\n        <td className=\"debuff-frame\">{debuffs}</td>\n      </tr>\n    );\n  }\n}\n\nfunction Debuff(props) {\n  return <img className=\"debuff\" src={props.debuff.icon} alt={props.debuff.name}/>;\n}\n\n// *****************\n// * Running Phase *\n// *****************\n\nfunction RunningPrompt(props) {\n  return (\n    <div>\n      <div className=\"flex-row setup-menu\">\n        <div className=\"ready-prompt hijacked-prompt\">\n          <p>Designation: Brute Justice. Temporal interlopers identified.</p>\n          <p>Verdict: Guilty. Punishment: Execution!</p>\n          <p>Initiating new combat protocol... Commence final judgment!</p>\n        </div>\n      </div>\n      <div className=\"go-wrapper hijacked-prompt\">\n        <p>Identify your partner.</p>\n      </div>\n    </div>\n  );\n}\n\nclass CountdownFrame extends React.Component {\n  render() {\n    return null;\n  }\n}\n\n// *******************\n// * Round End Phase *\n// *******************\n\nclass ResultFrame extends React.Component {\n  render() {\n    let p = this.props;\n    let msg;\n    if (p.selected == null)\n      msg = \"You ran out of time. The correct answer is highlighted.\";\n    else if (p.correct === p.selected)\n      msg = \"Correct!\";\n    else\n      msg = \"Incorrect. The correct answer is highlighted.\";\n\n    return (\n      <div>\n        <p>{msg}</p>\n        <div className=\"flex-row\">\n          <button onClick={p.toNextRound}>Next Round</button>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ===================\n// = UTILITY METHODS =\n// ===================\n\nfunction shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n}\n\nfunction generateParty(pcJob, partyOrder) {\n\tconsole.log(pcJob);\n  let party = [];\n  let numTanks = 2 - (pcJob.role === Role.TANK ? 1 : 0);\n  let numHealers = 2 - (pcJob.role === Role.HEALER ? 1 : 0);\n  let numMelee = (Math.random() * 2 | 0) + 1;\n  let numRanged = 1 - (pcJob.role === Role.RANGED ? 1 : 0);\n  let numCasters = 3 - numMelee - (pcJob.role === Role.CASTER ? 1 : 0);\n  numMelee -= (pcJob.role === Role.MELEE ? 1 : 0);\n\t// tanks\n\tlet tanks = Jobs.TANK.slice();\n\tshuffleArray(tanks);\n\tfor (let i = 0; i < numTanks; i++) \n    party.push({...tanks[i]});\n\t// healers\n\tlet healers = Jobs.HEALER.slice();\n\tshuffleArray(healers);\n\tfor (let i = 0; i < numHealers; i++) \n    party.push({...healers[i]});\n\t// melee\n\tlet melee = Jobs.MELEE.slice();\n\tshuffleArray(melee);\n\tfor (let i = 0; i < numMelee; i++) \n    party.push({...melee[i]});\n\t// ranged\n\tlet ranged = Jobs.RANGED.slice();\n\tshuffleArray(ranged);\n  for (let i = 0; i < numRanged; i++)\n\tparty.push({...ranged[i]});\n\t// casters\n\tlet casters = Jobs.CASTER.slice();\n\tshuffleArray(casters);\n\tfor (let i = 0; i < numCasters; i++) \n    party.push({...casters[i]});\n\n  party.sort((a, b) => (a.sortOrder + partyOrder[a.role]) - (b.sortOrder + partyOrder[b.role]));\n\n  let fullParty = [{...pcJob}].concat(party);\n\t\n\treturn fullParty;\t\n}\n\nfunction assignDebuffs(party) {\n\t// each player starts with penalty\n\tparty.forEach(m => m.debuffs = [Debuffs.PENALTY]);\n\t// one random healer gets lightning (removes from pool)\n\tlet healers = party.filter(m => m.role === Role.HEALER);\n\tshuffleArray(healers);\n\thealers.pop().debuffs.push(Debuffs.COMPRESSED_LIGHTNING);\n\t// create a pool of ranged + unused healer from above\n\tlet pool = party.filter(m => m.role === Role.RANGED || m.role === Role.CASTER).concat(healers);\n\tshuffleArray(pool);\n\t// compressed water on random ranged/healer (removes from pool)\n\tpool.pop().debuffs.push(Debuffs.COMPRESSED_WATER);\n\t// water vuln on random ranged/healer\n\tpool.pop().debuffs.push(Debuffs.WATER_VULN);\n\t// lightning vuln on \"random\" tank (we don't know who's tanking BJ)\n\tlet tanks = party.filter(m => m.role === Role.TANK);\n\tshuffleArray(tanks);\n\ttanks.pop().debuffs.push(Debuffs.LIGHTNING_VULN);\n\t// judgment (set 1) on all T/H\n\tlet th = party.filter(m => m.role === Role.TANK || m.role === Role.HEALER);\n\tshuffleArray(th);\n\tth[0].debuffs.push(Debuffs.JUDGMENT_ALPHA);\n\tth[1].debuffs.push(Debuffs.JUDGMENT_BETA);\n\tth[2].debuffs.push(Debuffs.JUDGMENT_GAMMA);\n\tth[3].debuffs.push(Debuffs.JUDGMENT_DELTA);\n\t// judgment (set 1) on all DPS\n\tlet dps = party.filter(m => m.role === Role.MELEE || m.role === Role.RANGED || m.role === Role.CASTER);\n\tshuffleArray(dps);\n\tdps[0].debuffs.push(Debuffs.JUDGMENT_ALPHA);\n\tdps[1].debuffs.push(Debuffs.JUDGMENT_BETA);\n\tdps[2].debuffs.push(Debuffs.JUDGMENT_GAMMA);\n\tdps[3].debuffs.push(Debuffs.JUDGMENT_DELTA);\n\t// nisi on either all T/H or all DPS\n\tlet nisi = (((Math.random() * 2 | 0) === 1) ? th : dps);\n\tshuffleArray(nisi);\n\tnisi[0].debuffs.push(Debuffs.NISI_ALPHA);\n\tnisi[1].debuffs.push(Debuffs.NISI_BETA);\n\tnisi[2].debuffs.push(Debuffs.NISI_GAMMA);\n\tnisi[3].debuffs.push(Debuffs.NISI_DELTA);\n\t// sort debuffs\n\tparty.forEach(m => m.debuffs.sort((a, b) => a.sortOrder - b.sortOrder));\n}\n\nfunction generateOrderLabel(order) {\n  let spans = [];\n  for (let i = 0; i < order.length; i++) {\n    let c = order.charAt(i);\n    if (c === 'T') {\n      spans.push(\n        <span className=\"order-sp\" key=\"T\">\n          <img className=\"role-icon\" src={Images.ROLE_TANK} alt=\"Tank\"/> Tank\n        </span>\n      );\n    }\n    else if (c === 'H') {\n      spans.push(\n        <span className=\"order-sp\" key=\"H\">\n          <img className=\"role-icon\" src={Images.ROLE_HEALER} alt=\"Healer\"/> Healer\n        </span>\n      );\n    }\n    else if (c === 'D') {\n      spans.push(\n        <span className=\"order-sp\" key=\"D\">\n          <img className=\"role-icon\" src={Images.ROLE_DPS} alt=\"DPS\"/> DPS\n        </span>\n      );\n    }\n  }\n  return spans;\n}\n\nfunction findBuddyIndex(party) {\n  let player = party[0];\n  let targetType, targetCode;\n  let targetRoles = \n    [Role.TANK, Role.HEALER].includes(player.role) ?\n      [Role.MELEE, Role.RANGED, Role.CASTER] :\n      [Role.TANK, Role.HEALER];\n\n  let playerNisiArr = player.debuffs.filter(d => d.type === DbType.NISI);\n  if (playerNisiArr.length > 0) {\n    targetType = DbType.JUDGMENT;\n    targetCode = playerNisiArr[0].code;\n  }\n  else {\n    let playerJudgmentArr = player.debuffs.filter(d => d.type === DbType.JUDGMENT);\n    targetType = DbType.NISI;\n    targetCode = playerJudgmentArr[0].code;\n  }\n\n  let index = null;\n  for (let i = 1; i < party.length; i++) {\n    if (targetRoles.includes(party[i].role)) {\n      let matches = party[i].debuffs.filter(d => {\n          return d.type === targetType && d.code === targetCode\n      });\n      if (matches.length > 0) {\n        index = i;\n        break;\n      }\n    }\n  }\n\n  return index;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}